--ALter AND Trigger for Frontiere

ETUPRE

ALTER TABLE FRONTIERE_1
ADD CONSTRAINT PK_FRONTIERE_1_nom PRIMARY KEY (nomp,nomf);



-------TRIGGER pour cle etrangere-----
CREATE OR REPLACE TRIGGER t_iu_frontiere_1
BEFORE INSERT OR UPDATE
ON FRONTIERE_1
FOR EACH ROW

DECLARE
n number;

BEGIN 
SELECT count(*) into n
from pays_1
where nom = :NEW.nomp;
    if n = 0 THEN
        RAISE_APPLICATION_ERROR (-20000,'Error: pays nomp_inconnu');
    end if;
    
SELECT count(*) into n
from pays_1
where nom = :NEW.nomf;
    if n = 0 THEN
        RAISE_APPLICATION_ERROR (-20000,'Error: pays nomf_inconnu');
    end if;
END;


create or replace TRIGGER t_du_frontiere_1
BEFORE DELETE OR UPDATE
ON pays_1
FOR EACH ROW

BEGIN 

DELETE FROM frontiere_1 WHERE nomp = :OLD.nom OR nomf =:OLD.nom; 
   
END;

TEST TRIGGER

INSERT INTO frontiere_1(nomp, nomf)
VALUES ('Espagne','Namek')

INSERT INTO frontiere_1(nomp, nomf)
VALUES ('Espagne','Canada')





DELETE FROM pays_1 WHERE nom = 'France'


SELECT * FROM frontiere_1 where nomp = 'France' OR nomf= 'France'
INSERT INTO pays_1 (nom) VALUES ('France')
INSERT INTO frontiere_1 (nomp, nomf) VALUES ('France','Espagne')
INSERT INTO frontiere_1 (nomp, nomf) VALUES ('MIAGE','France')







ETUSEC
ALTER TABLE FRONTIERE_2
ADD CONSTRAINT PK_FRONTIERE_2_nom PRIMARY KEY (nomp,nomf);

create or replace TRIGGER t_iu_frontiere_2
BEFORE INSERT OR UPDATE
ON FRONTIERE_2
FOR EACH ROW

DECLARE
n number;

BEGIN
SELECT count(*) into n
from pays_2
where nom = :NEW.nomp;
    if n = 0 THEN
        RAISE_APPLICATION_ERROR (-20000,'Error: pays nomp_inconnu');
    end if;

SELECT count(*) into n
from pays_2
where nom = :NEW.nomf;
    if n = 0 THEN
        RAISE_APPLICATION_ERROR (-20000,'Error: pays nomf_inconnu');
    end if;
END;

create or replace TRIGGER t_du_frontiere_2
BEFORE DELETE OR UPDATE
ON pays_2
FOR EACH ROW

BEGIN 

DELETE FROM frontiere_2 WHERE nomp = :OLD.nom OR nomf =:OLD.nom; 
   
END;

Test
SELECT * FROM frontiere_2 where nomp = 'France' OR nomf= 'France'
INSERT INTO pays_2 (nom, nomc) VALUES ('France','Europe')
INSERT INTO frontiere_2 (nomp, nomf) VALUES ('France','Espagne')
INSERT INTO frontiere_2 (nomp, nomf) VALUES ('MIAGE','France')

DELETE FROM pays_2 WHERE nom = 'France'


ETUTER
ALTER TABLE FRONTIERE_3
ADD CONSTRAINT PK_FRONTIERE_3_nom PRIMARY KEY (nomp,nomf);

create or replace Trigger t_iu_frontiere_3
BEFORE INSERT OR UPDATE
ON FRONTIERE_3
FOR EACH ROW

DECLARE
n number;

BEGIN
SELECT count(*) into n
from pays_1@lien_etupre
where nom = :NEW.nomp;
    if n = 0 THEN
        RAISE_APPLICATION_ERROR (-20000,'Error: pays nomp_inconnu');
    end if;

SELECT count(*) into n
from pays_1@lien_etupre
where nom = :NEW.nomf;
    if n = 0 THEN
        RAISE_APPLICATION_ERROR (-20000,'Error: pays nomf_inconnu');
    end if;
END;
create or replace TRIGGER t_du_frontiere_3
BEFORE DELETE OR UPDATE
ON pays_1
FOR EACH ROW

BEGIN 

DELETE FROM frontiere_3@lien_etuter WHERE nomp = :OLD.nom OR nomf =:OLD.nom; 

END;


TEST
SELECT * FROM frontiere_1 where nomp = 'France' OR nomf= 'France'
INSERT INTO pays_2 (nom, nomc) VALUES ('France','Europe')
INSERT INTO frontiere_2 (nomp, nomf) VALUES ('France','Espagne')
INSERT INTO frontiere_2 (nomp, nomf) VALUES ('MIAGE','France')

DELETE FROM pays_2 WHERE nom = 'France'